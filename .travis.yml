language: java

matrix:
  include:
  - os: linux
    before_install:
    - UPGRADE_GCC="true"
    # ---------------------------------------------------------------------------
    # Add repository for octave
    - travis_retry sudo add-apt-repository -y ppa:octave/stable
    # Add repository for installing g++-4.8 on Ubuntu 12.04
    - if [ "$UPGRADE_GCC" = "true" ]; then
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      fi
    # Update apt-get to include the contents from the new locations
    - travis_retry sudo apt-get update -qq
    # Install octave with apt-get
    - travis_retry sudo apt-get install -y octave liboctave-dev
    - cd ..
    - rm -rf MOxUnit; #Install Octave unit test package
    - git clone https://github.com/MOxUnit/MOxUnit.git # Install MOxUnit, which adds itself to the startup path
    - make -C MOxUnit install
    - rm -rf MOcov;
    - git clone https://github.com/MOcov/MOcov.git;
    - make -C MOcov install; #Install Octave coverage report
    - git clone https://github.com/mopify/mopi.git
    - printf "forge://io\nforge://statistics\nforge://nan" >> requirements.txt
    - rm -rf external;
    - mkdir -p external;
    # Install required packages for Octave
    - mopi/mopi.sh requirements.txt external "$HOME/external_cache";
    - cd netZooM
  - os: osx
    before_install:
    - brew update
    - brew install octave > /dev/null
    - brew install md5sha1sum
    - cd ..
    - rm -rf MOxUnit; #Install Octave unit test package
    - git clone https://github.com/MOxUnit/MOxUnit.git # Install MOxUnit, which adds itself to the startup path
    - make -C MOxUnit install
    - rm -rf MOcov;
    - git clone https://github.com/MOcov/MOcov.git;
    - make -C MOcov install; #Install Octave coverage report
    - cd netZooM
    - octave -q --eval "pkg install -forge io; pkg install -forge statistics; pkg install -forge nan"

before_script:
- rm -f testresults.xml;
- rm -f coverage.xml;
- rm -f .coverage;
- rm -f coveralls.json;

script:
- pwd
- ls
- octave -q --eval "addpath(genpath(fullfile(pwd,'netZooM')));exit(~moxunit_runtests('tests','-recursive','-verbose','-junit_xml_file','testresults.xml','-with_coverage','-cover','netZooM','-cover_exclude','tests','-cover_xml_file','coverage.xml','-cover_json_file','coveralls.json'));"

branches:
  only:
  - master
  - devel

after_success:
- bash <(curl -s https://codecov.io/bash)
